name: Run HWP API Tests

on:
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - main
  workflow_dispatch:

jobs:
  api-endpoints:
    runs-on: ubuntu-latest
    steps:
      # Set variables
      - name: Get repository name and remove owner
        id: repo-name
        run: |
          echo "::set-output name=repo-name::$(echo "${{ github.repository }}" | sed 's/\(.*\)\/\(.*\)/\2/g; s/[<>:\"\/\\\|\?\*]//g')"

      - name: Get PR name and remove spaces
        id: pr-name
        run: |
          echo "::set-output name=pr-name::$(echo "${{ github.event.pull_request.title }}" | sed 's/[<>:\"\/\\\|\?\*]//g; s/[ \.]/-/g')"

      - name: Get current datestamp
        id: date
        run: |
          echo "::set-output name=date::$(date '+%Y%m%d%H%M%S')"

      - name: Build file path
        id: results
        run: |
          echo "::set-output name=results::${{ steps.repo-name.outputs.repo-name }}_${{ github.job }}_${{ steps.date.outputs.date }}_${{ steps.pr-name.outputs.pr-name }}.json"

      # Prepare environment and build containers
      - uses: actions/checkout@v2

      - name: Install dependencies
        working-directory: ./server
        run: |
          npm ci

      # TODO: Create environment variable

      # TODO: Build containers (api and mongo)

      # Run tests
      - name: Run test command
        working-directory: ./server
        continue-on-error: true
        run: |
          npm test -- --json > tempResults

      # Refine results
      - name: Select only json line
        working-directory: ./server
        run: |
          echo $(sed -n 5p tempResults) > ${{ steps.results.outputs.results }}

      - name: Add keys to json file and pretty print
        working-directory: ./server
        shell: python
        run: |
          import json
          with open('tempResults') as json_file:
            data = json.load(json_file)
          data['repository'] = '${{ github.repository }}'
          data['branch'] = '${{ github.ref_name }}'
          data['pull-request'] = '${{ github.event.pull_request.title }}'
          data['creator'] = '${{ github.event.pull_request.user.login }}'
          with open('${{ steps.results.outputs.results }}', 'w') as json_file:
            json.dump(data, json_file, indent=2)

      - name: Save file as artifact
        uses: actions/upload-artifact@v1
        with:
          name: api-test-results
          path: ./server/${{ steps.results.outputs.results }}
